Needs["Quaternions`"];
quaternionToRotation[qq_] /; QuaternionQ[ToQuaternion[qq]] := 
 Module[{q = ToQuaternion[qq], aim, r}, aim = AbsIJK[q]; r = Re[q];
  If[aim == 0, Return[IdentityMatrix[3], Module]];
  First[LinearAlgebra`Private`MatrixPolynomial[{Prepend[
      2 aim {r, aim}/(r^2 + aim^2), 
      1]}, -LeviCivitaTensor[3, List] . (Rest[List @@ q]/aim)]]]

data2 = Import["data.txt", "Package"];

m = IdentityMatrix[4];
m[[1 ;; 3, 1 ;; 3]] = EulerMatrix[{a, b, c}, {1, 2, 3}];
m[[1 ;; 3, -1]] = {x, y, z};
transform[a_, b_, c_, x_, y_, z_] = TransformationFunction[m];

qlist = Table[
   Quaternion[data[[i, 5]], data[[i, 6]], data[[i, 7]], 
    data[[i, 8]]], {i, 1, Length@data}];
ealist = 
  Table[EulerAngles[quaternionToRotation[qlist[[i]]], {1, 2, 3}], {i, 
    1, Length@qlist}];
cdata = Take[
   Table[{data[[i, 2]], data[[i, 3]], data[[i, 4]]}, {i, 1, 
     Length@data}], {1, -1, 10}];

ListLinePlot3D[cdata, ImageSize -> Large, 
 AxesLabel -> {"X", "Y", "Z"}, AxesStyle -> Black, Filling -> Bottom, 
 FillingStyle -> Directive[Black, Thick, Opacity[0.2]], 
 PlotStyle -> Black, BoxRatios -> {1/2, 1, 1}, ViewAngle -> Pi/12, 
 ViewVertical -> {0, 0, 1}, ViewPoint -> {Pi, -3 Pi/4, 4}, 
 PlotRange -> All]
